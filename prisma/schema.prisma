generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id              Int          @id @default(autoincrement()) @map("usu_idUsuario")
  email           String       @unique @map("usu_email")
  nome            String       @map("usu_nome")
  passwordHash    String       @map("usu_passwordHash")
  authToken       String       @unique @map("usu_authToken")
  apelido         String       @unique @map("usu_apelido")
  foto            String       @map("usu_foto")
  role            Roles        @default(USER) @map("usu_role")
  pontosTotais    Int          @default(0) @map("usu_pontostotais")
  dataCriacao     DateTime     @default(now()) @map("usu_dataCriacao")
  dataAtualizacao DateTime     @updatedAt @map("usu_dataAtualizacao")
  campeonatos     Campeonato[]
  equipes         Equipe[]
  jogadores       Jogador[]
  regras          Regra[]

  @@map("tb_usuario")
}

model Campeonato {
  id                 Int                  @id @default(autoincrement()) @map("cam_idcampeonato")
  usuarioId          Int                  @map("usu_idusuario")
  regraId            Int                  @map("reg_idregra")
  nome               String               @unique @map("cam_nome")
  jogo               String               @map("cam_nomeDoJogo")
  foto               String               @map("cam_foto")
  descricao          String               @map("cam_desc")
  dataCriacao        DateTime             @default(now()) @map("cam_dataCriacao")
  dataAtualizacao    DateTime             @updatedAt @map("cam_dataAtualizacao")
  status             StatusCampeonato     @default(ATIVO) @map("cam_status")
  tipo               TipoCampeonato       @default(VIRTUAL) @map("cam_tipo")
  usuario            Usuario              @relation(fields: [usuarioId], references: [id], onUpdate: Restrict)
  regra              Regra                @relation(fields: [regraId], references: [id], onUpdate: Restrict)
  fases              Fase[]
  EquipeDoCampeonato EquipeDoCampeonato[]

  @@index([usuarioId])
  @@index([regraId])
  @@map("tb_campeonato")
}

model Equipe {
  id                 Int                  @id @default(autoincrement()) @map("equ_idequipe")
  usuarioId          Int                  @map("usu_idusuario")
  nome               String               @unique @map("equ_nome")
  foto               String               @map("equ_foto")
  descricao          String               @map("equ_desc")
  numeroJogadores    Int                  @map("equ_numjogadores")
  pontosTotais       Int                  @map("equ_pontostotais")
  usuario            Usuario              @relation(fields: [usuarioId], references: [id], onUpdate: Restrict)
  EquipeDoCampeonato EquipeDoCampeonato[]
  JogadorDaEquipe    JogadorDaEquipe[]

  @@index([usuarioId])
  @@map("tb_equipe")
}

model Fase {
  id           Int        @id @default(autoincrement()) @map("fas_idfase")
  campeonatoId Int        @map("cam_idcampeonato")
  nome         String     @map("fas_nome")
  posicao      Int        @map("fas_posicao")
  campeonato   Campeonato @relation(fields: [campeonatoId], references: [id], onUpdate: Restrict)
  partidas     Partida[]

  @@index([campeonatoId])
  @@map("tb_fase")
}

model Jogador {
  id               Int               @id @default(autoincrement()) @map("jog_idjogador")
  usuarioId        Int?              @map("usu_idusuario")
  nome             String            @map("jog_nome")
  apelido          String            @map("jog_apelido")
  foto             String            @map("jog_foto")
  pontosAcumulados Int               @map("jog_pontosacumulados")
  usuario          Usuario?          @relation(fields: [usuarioId], references: [id], onDelete: Restrict, onUpdate: Restrict)
  JogadorDaEquipe  JogadorDaEquipe[]

  @@index([usuarioId])
  @@map("tb_jogador")
}

model Partida {
  id           Int            @id @default(autoincrement()) @map("par_idpartida")
  faseId       Int            @map("fas_idfase")
  data         DateTime       @map("par_data")
  fase         Fase           @relation(fields: [faseId], references: [id], onUpdate: Restrict)
  PontoJogador PontoJogador[]

  @@index([faseId])
  @@map("tb_partida")
}

model PontoJogador {
  id              Int     @id @default(autoincrement()) @map("pjo_idpontojog")
  partidaId       Int     @map("par_idpartida")
  regraAtributoId Int     @map("rat_idregraatributo")
  jogadorId       Int     @map("jog_idjogador")
  quantidade      Int     @map("pjo_qtde")
  pontosTotais    Int     @map("pjo_pontostotais")
  partida         Partida @relation(fields: [partidaId], references: [id], onUpdate: Restrict)

  @@index([partidaId])
  @@index([regraAtributoId])
  @@index([jogadorId])
  @@map("tb_ponto_jogador")
}

model Regra {
  id            Int             @id @default(autoincrement()) @map("reg_idregra")
  nome          String          @map("reg_nome")
  usuarioId     Int             @map("usu_idusuario")
  campeonatos   Campeonato[]
  usuario       Usuario         @relation(fields: [usuarioId], references: [id], onUpdate: Restrict)
  RegraAtributo RegraAtributo[]

  @@index([usuarioId])
  @@map("tb_regra")
}

model RegraAtributo {
  id      Int    @id @default(autoincrement()) @map("rat_idregraatributo")
  regraId Int    @map("reg_idregra")
  nome    String @map("rat_nome")
  pontos  Int    @map("rat_pontos")
  regra   Regra  @relation(fields: [regraId], references: [id], onUpdate: Restrict)

  @@index([regraId])
  @@map("tb_regra_atributo")
}

model EquipeDoCampeonato {
  id           Int        @id @default(autoincrement()) @map("eqc_idEquipeCampeonato")
  equipeId     Int        @map("eqc_idequipe")
  campeonatoId Int        @map("eqc_idcampeonato")
  pontosTotais Int        @map("eqc_pontostotais")
  equipe       Equipe     @relation(fields: [equipeId], references: [id], onUpdate: Restrict)
  campeonato   Campeonato @relation(fields: [campeonatoId], references: [id], onUpdate: Restrict)

  @@index([equipeId])
  @@index([campeonatoId])
  @@map("tb_equipe_do_campeonato")
}

model JogadorDaEquipe {
  id        Int     @id @default(autoincrement()) @map("jde_idJogadorEquipe")
  jogadorId Int     @map("jde_idjogador")
  equipeId  Int     @map("jde_idequipe")
  pontos    Int     @map("jde_pontos")
  jogador   Jogador @relation(fields: [jogadorId], references: [id], onUpdate: Restrict)
  equipe    Equipe  @relation(fields: [equipeId], references: [id], onUpdate: Restrict)

  @@index([jogadorId])
  @@index([equipeId])
  @@map("tb_jogador_da_equipe")
}

enum Roles {
  USER
  ADMIN
}

enum TipoCampeonato {
  VIRTUAL
  FISICO
}

enum StatusCampeonato {
  ATIVO
  INATIVO
}
